@model Group7WebApp.Areas.Identity.Data.WebAppUser
@using Group7WebApp.Helpers
@inject Group7WebApp.Helpers.Interface.IAuthorizationMiddlewareService authorizeService

@{
    ViewData["Title"] = "Contact Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class=" conatiner  m-auto p-4 ">
    <div class="border p-3 mt-4">
        <div class="row">
            <h2 class="text-white"> User's Detail</h2>
        </div>
        <hr />
        <input type="hidden" name="id" value="@Model.Id" />
        <div class="form-group">
            <label asp-for="FirtName" class="form-label "></label>
            <input asp-for="Id" hidden class="form-control" readonly placeholder="Category Name">
            <input asp-for="FirtName" class="form-control" readonly placeholder="First Name">
            <span asp-validation-for="FirtName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="LastName" class="form-label "></label>
            <input asp-for="LastName" class="form-control" readonly placeholder="Lastme">
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Email" class="form-label "></label>
            <input asp-for="Email" class="form-control" readonly placeholder="Email
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        
        <div class="form-group">
            <label asp-for="UserName" class="form-label "></label>
            <input asp-for="UserName" class=" form-control" readonly placeholder="User Name">
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Role" class="form-label "></label>
            <input asp-for="Role" class=" form-control" readonly placeholder="Role">
            <span asp-validation-for="Role" class="text-danger"></span>
        </div>



        @if (await authorizeService.Authorize(Priviledge.Approve, null) && Model.Status==Status.Pending.GetDescription())
        {
            <br />
            <div class="row">

                <form asp-action="Approve" style="display:inline" class="col-md-2">
                    <div class="form-group">
                        <input type="hidden" name="id" value="@Model.Email" />
                        <input type="hidden" name="status" value="@Status.Approved.GetDescription()" />
                        <input type="submit" value="Approve" class="btn btn-success" />
                    </div>
                </form>

                <form asp-action="Reject" style="display:inline " class="col-md-2">
                    <div class="form-group">
                        <input type="hidden" name="id" value="@Model.Email" />
                        <input type="hidden" name="status" value="@Status.Rejected.GetDescription()" />
                        <input type="submit" value="Reject" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        }
        <a asp-controller="User" asp-action="Index" class="mt-3  btn btn-outline-secondary">Back to list</a>
    </div>
</div>
@section Scripts{

    <partial name="_ValidationScriptsPartial" />
}